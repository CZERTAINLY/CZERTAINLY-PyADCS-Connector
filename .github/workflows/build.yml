name: Build

on:
  pull_request:
    branches: [develop]
  push:
    branches: [develop]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:16
        # Provide the password for postgres
        env:
          POSTGRES_USER: czertainlyuser
          POSTGRES_PASSWORD: your-strong-password
          POSTGRES_DB: czertainlydb
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install system dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y gcc python3-dev libkrb5-dev libssl-dev
      - name: Install Dependencies
        working-directory: ./CZERTAINLY_PyADCS_Connector
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        working-directory: ./CZERTAINLY_PyADCS_Connector
        env:
          DATABASE_SCHEMA: pyadcs
          DATABASE_NAME: czertainlydb
          DATABASE_USER: czertainlyuser
          DATABASE_PASSWORD: your-strong-password
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          LOG_LEVEL: DEBUG
        run: |
          python manage.py test
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
